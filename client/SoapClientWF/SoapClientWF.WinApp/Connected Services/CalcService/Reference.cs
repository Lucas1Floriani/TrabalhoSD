//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapClientWF.WinApp.CalcService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://calc/", ConfigurationName="CalcService.CalculadoraServer")]
    public interface CalculadoraServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/somaRequest", ReplyAction="http://calc/CalculadoraServer/somaResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float soma(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/somaRequest", ReplyAction="http://calc/CalculadoraServer/somaResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> somaAsync(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/subtracaoRequest", ReplyAction="http://calc/CalculadoraServer/subtracaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float subtracao(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/subtracaoRequest", ReplyAction="http://calc/CalculadoraServer/subtracaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> subtracaoAsync(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/divisaoRequest", ReplyAction="http://calc/CalculadoraServer/divisaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float divisao(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/divisaoRequest", ReplyAction="http://calc/CalculadoraServer/divisaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> divisaoAsync(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/multiplicacaoRequest", ReplyAction="http://calc/CalculadoraServer/multiplicacaoResponse")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        float multiplicacao(float arg0, float arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://calc/CalculadoraServer/multiplicacaoRequest", ReplyAction="http://calc/CalculadoraServer/multiplicacaoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<float> multiplicacaoAsync(float arg0, float arg1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalculadoraServerChannel : SoapClientWF.WinApp.CalcService.CalculadoraServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculadoraServerClient : System.ServiceModel.ClientBase<SoapClientWF.WinApp.CalcService.CalculadoraServer>, SoapClientWF.WinApp.CalcService.CalculadoraServer {
        
        public CalculadoraServerClient() {
        }
        
        public CalculadoraServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculadoraServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float soma(float arg0, float arg1) {
            return base.Channel.soma(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> somaAsync(float arg0, float arg1) {
            return base.Channel.somaAsync(arg0, arg1);
        }
        
        public float subtracao(float arg0, float arg1) {
            return base.Channel.subtracao(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> subtracaoAsync(float arg0, float arg1) {
            return base.Channel.subtracaoAsync(arg0, arg1);
        }
        
        public float divisao(float arg0, float arg1) {
            return base.Channel.divisao(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> divisaoAsync(float arg0, float arg1) {
            return base.Channel.divisaoAsync(arg0, arg1);
        }
        
        public float multiplicacao(float arg0, float arg1) {
            return base.Channel.multiplicacao(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<float> multiplicacaoAsync(float arg0, float arg1) {
            return base.Channel.multiplicacaoAsync(arg0, arg1);
        }
    }
}
